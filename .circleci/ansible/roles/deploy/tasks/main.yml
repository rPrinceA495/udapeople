---
  - name: install rsync on the ansible controller
    become: yes
    connection: local
    package:
      name: 
        - openssh
        - rsync
      state: present
      
  - name: "move files to server"
    become: yes
    synchronize:
      src: /root/project/backend/dist
      dest: ./udapeople
      recursive: true

  - name: "move node modules"
    become: yes
    synchronize:
      src: /root/project/backend/node_modules
      dest: ./udapeople
      recursive: true

  - name: "run server"
    become: true
    command: pm2 start -f ./main.js
    args:
      chdir: ./udapeople/dist
    environment:
      ENVIRONMENT: production
      TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
      TYPEORM_MIGRATIONS_DIR: "./migrations"
      TYPEORM_MIGRATIONS: "./migrations/*.js"
      TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
      TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
      TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
      TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
      TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
      TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"


# ---
# - name: "Create directory for backend"
#   file:
#     path: ~/backend-app
#     state: directory

# - name: "Extract zipped artifact"
#   unarchive:
#     src: artifact.tar.gz
#     dest: ~/backend-app

# - name: "Installing dependencies"
#   shell: |
#     cd ~/backend-app
#     npm i
# - name: "Executing app using pm2"
#   shell: |
#     cd ~/backend-app/dist
#     pm2 stop default
#     pm2 start main.js
#     # pm2 start npm -- start
#   register: execute_node

# - name: print message
#   debug:
#     msg: "{{ execute_node.stdout_lines }}"

# - name: "Configure pm2 to start as service"
#   become: true
#   shell: |
#     env PATH=$PATH:/usr/local/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu
